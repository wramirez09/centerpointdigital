"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/lg-hash.js";
exports.ids = ["vendor-chunks/lg-hash.js"];
exports.modules = {

/***/ "(ssr)/./node_modules/lg-hash.js/dist/lg-hash.js":
/*!*************************************************!*\
  !*** ./node_modules/lg-hash.js/dist/lg-hash.js ***!
  \*************************************************/
/***/ ((module) => {

eval("\n/**!\r\n * lg-hash.js | 1.0.0 | October 5th 2016\r\n * http://sachinchoolur.github.io/lg-hash.js\r\n * Copyright (c) 2016 Sachin N; \r\n * @license GPLv3 \r\n */ (function(f) {\n    if (true) {\n        module.exports = f();\n    } else { var g; }\n})(function() {\n    var define1, module1, exports1;\n    return (function e(t, n, r) {\n        function s(o, u) {\n            if (!n[o]) {\n                if (!t[o]) {\n                    var a = undefined;\n                    if (!u && a) return require(o, !0);\n                    if (i) return i(o, !0);\n                    var f = new Error(\"Cannot find module '\" + o + \"'\");\n                    throw f.code = \"MODULE_NOT_FOUND\", f;\n                }\n                var l = n[o] = {\n                    exports: {}\n                };\n                t[o][0].call(l.exports, function(e) {\n                    var n = t[o][1][e];\n                    return s(n ? n : e);\n                }, l, l.exports, e, t, n, r);\n            }\n            return n[o].exports;\n        }\n        var i = undefined;\n        for(var o = 0; o < r.length; o++)s(r[o]);\n        return s;\n    })({\n        1: [\n            function(require1, module1, exports1) {\n                (function(global1, factory) {\n                    if (typeof define1 === \"function\" && define1.amd) {\n                        define1([], factory);\n                    } else if (typeof exports1 !== \"undefined\") {\n                        factory();\n                    } else {\n                        var mod = {\n                            exports: {}\n                        };\n                        factory();\n                        global1.lgHash = mod.exports;\n                    }\n                })(this, function() {\n                    \"use strict\";\n                    var _extends = Object.assign || function(target) {\n                        for(var i = 1; i < arguments.length; i++){\n                            var source = arguments[i];\n                            for(var key in source){\n                                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                                    target[key] = source[key];\n                                }\n                            }\n                        }\n                        return target;\n                    };\n                    var hashDefaults = {\n                        hash: true\n                    };\n                    var Hash = function Hash(element) {\n                        this.el = element;\n                        this.core = window.lgData[this.el.getAttribute(\"lg-uid\")];\n                        this.core.s = _extends({}, hashDefaults, this.core.s);\n                        if (this.core.s.hash) {\n                            this.oldHash = window.location.hash;\n                            this.init();\n                        }\n                        return this;\n                    };\n                    Hash.prototype.init = function() {\n                        var _this = this;\n                        var _hash;\n                        // Change hash value on after each slide transition\n                        utils.on(_this.core.el, \"onAfterSlide.lgtm\", function(event) {\n                            window.location.hash = \"lg=\" + _this.core.s.galleryId + \"&slide=\" + event.detail.index;\n                        });\n                        // Listen hash change and change the slide according to slide value\n                        utils.on(window, \"hashchange.lghash\", function() {\n                            _hash = window.location.hash;\n                            var _idx = parseInt(_hash.split(\"&slide=\")[1], 10);\n                            // it galleryId doesn't exist in the url close the gallery\n                            if (_hash.indexOf(\"lg=\" + _this.core.s.galleryId) > -1) {\n                                _this.core.slide(_idx, false, false);\n                            } else if (_this.core.lGalleryOn) {\n                                _this.core.destroy();\n                            }\n                        });\n                    };\n                    Hash.prototype.destroy = function() {\n                        if (!this.core.s.hash) {\n                            return;\n                        }\n                        // Reset to old hash value\n                        if (this.oldHash && this.oldHash.indexOf(\"lg=\" + this.core.s.galleryId) < 0) {\n                            window.location.hash = this.oldHash;\n                        } else {\n                            if (history.pushState) {\n                                history.pushState(\"\", document.title, window.location.pathname + window.location.search);\n                            } else {\n                                window.location.hash = \"\";\n                            }\n                        }\n                        utils.off(this.core.el, \".lghash\");\n                    };\n                    window.lgModules.hash = Hash;\n                });\n            },\n            {}\n        ]\n    }, {}, [\n        1\n    ])(1);\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lg-hash.js/dist/lg-hash.js\n");

/***/ })

};
;