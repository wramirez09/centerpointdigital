"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/lg-fullscreen.js";
exports.ids = ["vendor-chunks/lg-fullscreen.js"];
exports.modules = {

/***/ "(ssr)/./node_modules/lg-fullscreen.js/dist/lg-fullscreen.js":
/*!*************************************************************!*\
  !*** ./node_modules/lg-fullscreen.js/dist/lg-fullscreen.js ***!
  \*************************************************************/
/***/ ((module) => {

eval("\n/**!\n * lg-fullscreen.js | 1.2.0 | May 20th 2020\n * http://sachinchoolur.github.io/lg-fullscreen.js\n * Copyright (c) 2016 Sachin N; \n * @license GPLv3 \n */ (function(f) {\n    if (true) {\n        module.exports = f();\n    } else { var g; }\n})(function() {\n    var define1, module1, exports1;\n    return (function() {\n        function r(e, n, t) {\n            function o(i, f) {\n                if (!n[i]) {\n                    if (!e[i]) {\n                        var c = undefined;\n                        if (!f && c) return require(i, !0);\n                        if (u) return u(i, !0);\n                        var a = new Error(\"Cannot find module '\" + i + \"'\");\n                        throw a.code = \"MODULE_NOT_FOUND\", a;\n                    }\n                    var p = n[i] = {\n                        exports: {}\n                    };\n                    e[i][0].call(p.exports, function(r) {\n                        var n = e[i][1][r];\n                        return o(n || r);\n                    }, p, p.exports, r, e, n, t);\n                }\n                return n[i].exports;\n            }\n            for(var u = undefined, i = 0; i < t.length; i++)o(t[i]);\n            return o;\n        }\n        return r;\n    })()({\n        1: [\n            function(require1, module1, exports1) {\n                (function(global1, factory) {\n                    if (typeof define1 === \"function\" && define1.amd) {\n                        define1([], factory);\n                    } else if (typeof exports1 !== \"undefined\") {\n                        factory();\n                    } else {\n                        var mod = {\n                            exports: {}\n                        };\n                        factory();\n                        global1.lgFullscreen = mod.exports;\n                    }\n                })(this, function() {\n                    \"use strict\";\n                    var _extends = Object.assign || function(target) {\n                        for(var i = 1; i < arguments.length; i++){\n                            var source = arguments[i];\n                            for(var key in source){\n                                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                                    target[key] = source[key];\n                                }\n                            }\n                        }\n                        return target;\n                    };\n                    var fullscreenDefaults = {\n                        fullScreen: true\n                    };\n                    function isFullScreen() {\n                        return document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement;\n                    }\n                    var Fullscreen = function Fullscreen(element) {\n                        this.el = element;\n                        this.core = window.lgData[this.el.getAttribute(\"lg-uid\")];\n                        this.core.s = _extends({}, fullscreenDefaults, this.core.s);\n                        this.init();\n                        return this;\n                    };\n                    Fullscreen.prototype.init = function() {\n                        var fullScreen = \"\";\n                        if (this.core.s.fullScreen) {\n                            // check for fullscreen browser support\n                            if (!document.fullscreenEnabled && !document.webkitFullscreenEnabled && !document.mozFullScreenEnabled && !document.msFullscreenEnabled) {\n                                return;\n                            } else {\n                                fullScreen = '<button aria-label=\"Toggle fullscreen\" class=\"lg-fullscreen lg-icon\"></button>';\n                                this.core.outer.querySelector(\".lg-toolbar\").insertAdjacentHTML(\"beforeend\", fullScreen);\n                                this.fullScreen();\n                            }\n                        }\n                    };\n                    Fullscreen.prototype.requestFullscreen = function() {\n                        var el = document.documentElement;\n                        if (el.requestFullscreen) {\n                            el.requestFullscreen();\n                        } else if (el.msRequestFullscreen) {\n                            el.msRequestFullscreen();\n                        } else if (el.mozRequestFullScreen) {\n                            el.mozRequestFullScreen();\n                        } else if (el.webkitRequestFullscreen) {\n                            el.webkitRequestFullscreen();\n                        }\n                    };\n                    Fullscreen.prototype.exitFullscreen = function() {\n                        if (document.exitFullscreen) {\n                            document.exitFullscreen();\n                        } else if (document.msExitFullscreen) {\n                            document.msExitFullscreen();\n                        } else if (document.mozCancelFullScreen) {\n                            document.mozCancelFullScreen();\n                        } else if (document.webkitExitFullscreen) {\n                            document.webkitExitFullscreen();\n                        }\n                    };\n                    // https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Using_full_screen_mode\n                    Fullscreen.prototype.fullScreen = function() {\n                        var _this = this;\n                        utils.on(document, \"fullscreenchange.lgfullscreen webkitfullscreenchange.lgfullscreen mozfullscreenchange.lgfullscreen MSFullscreenChange.lgfullscreen\", function() {\n                            if (utils.hasClass(_this.core.outer, \"lg-fullscreen-on\")) {\n                                utils.removeClass(_this.core.outer, \"lg-fullscreen-on\");\n                            } else {\n                                utils.addClass(_this.core.outer, \"lg-fullscreen-on\");\n                            }\n                        });\n                        utils.on(this.core.outer.querySelector(\".lg-fullscreen\"), \"click.lg\", function() {\n                            if (isFullScreen()) {\n                                _this.exitFullscreen();\n                            } else {\n                                _this.requestFullscreen();\n                            }\n                        });\n                    };\n                    Fullscreen.prototype.destroy = function() {\n                        // exit from fullscreen if activated\n                        if (isFullScreen()) {\n                            this.exitFullscreen();\n                        }\n                        utils.off(document, \".lgfullscreen\");\n                    };\n                    window.lgModules.fullscreen = Fullscreen;\n                });\n            },\n            {}\n        ]\n    }, {}, [\n        1\n    ])(1);\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lg-fullscreen.js/dist/lg-fullscreen.js\n");

/***/ })

};
;